const questions = [
    {
        question: "<br>На рисунке схема дорог Н-ского района изображена в виде графа, в таблице содержатся сведения о протяжённости каждой из этих дорог (в километрах).",
        type: "textImageText",
        images: ["../../../images/ege/9.png", "../../../images/ege/10.png"],
        afterImagesText: "Так как таблицу и схему рисовали независимо друг от друга, то нумерация населённых пунктов в таблице никак не связана с буквенными обозначениями на графе. Определите, какова сумма протяжённостей дорог из пункта D в пункт B и из пункта A в пункт E.<br>В ответе запишите целое число.",
        answer: "92"
    },
    {
        question: "Логическая функция F задаётся выражением (¬a ∧ ¬b) ∨ (b ≡ c) ∨ d. На рисунке приведён частично заполненный фрагмент таблицы истинности функции F, содержащий неповторяющиеся строки. Определите, какому столбцу таблицы истинности функции F соответствует каждая из переменных a, b, c, d.",
        type: "textImageTextImageText",
        images: ["../../../images/ege/15.png", "../../../images/ege/16.png"],
        afterImagesText: "В ответе напишите буквы a, b, c, d в том порядке, в котором идут соответствующие им столбцы (сначала  — буква, соответствующая первому столбцу; затем  — буква, соответствующая второму столбцу, и т. д.). Буквы в ответе пишите подряд, никаких разделителей между буквами ставить не нужно.<br>Пример. Пусть задано выражение x → y, зависящее от двух переменных x и y, и фрагмент таблицы истинности:<br>Тогда первому столбцу соответствует переменная y, а второму столбцу соответствует переменная x. В ответе нужно написать: yx.",
        answer: "cdba"
    },
    {
        question: "В файле приведён фрагмент базы данных «Продукты», содержащей информацию о поставках товаров и их продаже. База данных состоит из трёх таблиц.<br>Таблица «Торговля» содержит записи о поставках и продажах товаров в магазинах города в июне 2021⁠г. Таблица «Товар» содержит данные о товарах. Таблица «Магазин» содержит данные о магазинах.<br>На рисунке приведена схема базы данных, содержащая все поля каждой таблицы и связи между ними.",
        type: "textImageTextDownload",
        images: ["../../../images/ege/21.png"],
        afterImagesText: "Используя информацию из приведённой базы данных, определите магазин, продавший за месяц наибольшее количество лапши гречневой. В ответе запишите ID магазина  — так, как он указан в базе.",
        fileLink: "file3.zip",
        answer: "М35"
    },
    {
        question: "По каналу связи передаются сообщения, содержащие только семь букв: А, Б, В, Г, Й, К, Л. Для передачи используется двоичный код, удовлетворяющий условию Фано. Кодовые слова для некоторых букв известны: Б  — 00, Г  — 010, К  — 101. Какое наименьшее количество двоичных знаков потребуется для кодирования слова БАЛАЛАЙКА?<br><b>Примечание.</b> Условие Фано означает, что ни одно кодовое слово не является началом другого кодового слова.",
        type: "text",
        answer: "23"
    },
    {
        question: "Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.<br>1.  Перемножаются отдельно первая и вторая цифры, а также – вторая и третья цифры.<br>2.  Полученные два числа записываются друг за другом в порядке невозрастания без разделителей.<br><br>Пример. Исходное число: 179. Произведения: 1*7 = 7; 7*9 = 63. Результат: 637.<br>Укажите наименьшее число, при обработке которого автомат выдаёт результат 123.",
        type: "text",
        answer: "134"
    },
    {
        question: "Исполнитель Черепаха действует на плоскости с декартовой системой координат. В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен. При опущенном хвосте Черепаха оставляет на поле след в виде линии. В каждый конкретный момент известно положение исполнителя и направление его движения. У исполнителя существует две команды: Вперёд n (где n  — целое число), вызывающая передвижение Черепахи на n единиц в том направлении, куда указывает её голова, и Направо m (где m  — целое число), вызывающая изменение направления движения на m градусов по часовой стрелке. Запись<br>Повтори k [Команда1 Команда2 … КомандаS]<br>означает, что последовательность из S команд повторится k раз. Черепахе был дан для исполнения следующий алгоритм:<br>Повтори 5 [Вперёд 8 Направо 60 Вперёд 8 Направо 120]<br>Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом. Точки на линии учитывать не следует.",
        type: "text",
        answer: "48"
    },
    {
        question: "Для проведения эксперимента записывается звуковой фрагмент в формате квадро (четырёхканальная запись) с частотой дискретизации 32 кГц и 32-битным разрешением. Результаты записываются в файл, сжатие данных не производится; дополнительно в файл записывается служебная информация, необходимая для эксперимента, размер полученного файла 97 Мбайт. Затем производится повторная запись этого же фрагмента в формате моно (одноканальная запись) с частотой дискретизации 16 кГц и 16-битным разрешением. Результаты тоже записываются в файл без сжатия и со служебной информацией, размер полученного файла 7 Мбайт. Объём служебной информации в обоих случаях одинаков. Укажите этот объём в мегабайтах. В ответе укажите только число (количество Мбайт), единицу измерения указывать не надо.",
        type: "text",
        answer: "1"
    },
    {
        question: "Руслан составляет 6-буквенные коды из букв Р, У, С, Л, А, Н. Каждую букву нужно использовать ровно один раз, при этом нельзя ставить рядом две гласные. Сколько различных кодов может составить Руслан?",
        type: "text",
        answer: "480"
    },
    {
        question: "Откройте файл электронной таблицы, содержащей в каждой строке пять натуральных чисел. Определите количество строк таблицы, содержащих числа, для которых выполнены оба условия:<br>— в строке все числа различны;<br>— удвоенная сумма максимального и минимального чисел строки не больше суммы оставшихся трёх её чисел.<br>В ответе запишите только число.",
        type: "textDownload",
        fileLink: "file9.zip",
        answer: "607"
    },
    {
        question: "Определите, в какой главе романа Михаила Булгакова «Мастер и Маргарита» впервые встречается имя Фагот. В ответе укажите число  — номер главы.",
        type: "textDownload",
        fileLink: "file10.zip",
        answer: "12"
    },
    {
        question: "Каждый сотрудник предприятия получает электронный пропуск, на котором записаны личный код сотрудника, код подразделения и некоторая дополнительная информация. Личный код состоит из 13 символов, каждый из которых может быть одной из 16 допустимых заглавных букв или одной из 10 цифр. Для записи личного кода используют посимвольное кодирование, все символы кодируют одинаковым минимально возможным количеством бит. Код подразделения состоит из двух натуральных чисел, не превышающих 100, каждое из которых кодируется как двоичное число и занимает минимально возможное целое число бит. Личный код и код подразделения записываются подряд и вместе занимают минимально возможное целое число байт. Всего на пропуске хранится 32 байт данных. Сколько байт выделено для хранения дополнительных сведений об одном сотруднике? В ответе запишите только целое число  — количество байт",
        type: "text",
        answer: "22"
    },
    {
        question: "Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.<br>А)  заменить (v, w).<br>Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды<br>заменить (111, 27)<br>преобразует строку 05111150 в строку 0527150.<br>Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.<br>Б)  нашлось (v).<br>Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка<br>исполнителя при этом не изменяется.<br>Цикл<br>    ПОКА условие<br>        последовательность команд<br>    КОНЕЦ ПОКА<br>выполняется, пока условие истинно.<br>В конструкции<br>    ЕСЛИ условие<br>        ТО команда1<br>    КОНЕЦ ЕСЛИ<br>выполняется команда1 (если условие истинно).<br>В конструкции<br>    ЕСЛИ условие<br>        ТО команда1<br>        ИНАЧЕ команда2<br>    КОНЕЦ ЕСЛИ<br>выполняется команда1 (если условие истинно) или команда2 (если условие ложно).<br>На вход приведённой ниже программе поступает строка, начинающаяся с символа «>», а затем содержащая 11 цифр 1, 12 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.<br>Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.<br>Так, например, если результат работы программы представлял бы собой строку, состоящую из 50 цифр 4, то верным ответом было бы число 200.<br>НАЧАЛО<br>ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)<br>    ЕСЛИ нашлось (>1)<br>        ТО заменить (>1, 22>)<br>    КОНЕЦ ЕСЛИ    ЕСЛИ нашлось (>2)<br>        ТО заменить (>2, 2>)<br>    КОНЕЦ ЕСЛИ<br>    ЕСЛИ нашлось (>3)<br>        ТО заменить (>3, 1>)<br>    КОНЕЦ ЕСЛИ<br>КОНЕЦ ПОКА<br>КОНЕЦ",
        type: "text",
        answer: "98"
    },
    {
        question: "В терминологии сетей TCP/IP маской сети называется двоичное число, определяющее, какая часть IP⁠-адреса узла сети относится к адресу сети, а какая  — к адресу самого узла в этой сети. При этом в маске сначала (в старших разрядах) стоят единицы, а затем с некоторого места  — нули.<br>Адрес сети получается в результате применения поразрядной конъюнкции к заданному IP⁠-адресу узла и маске.<br>Например, если IP⁠-адрес узла равен 231.32.255.131, а маска равна 255.255.240.0, то адрес сети равен 231.32.240.0.<br>Узлы с IP⁠-адресами 114.91.57.39 и 114.91.19.61 находятся в одной сети. Укажите наименьшее возможное количество принадлежащих этой сети IP⁠-адресов, в двоичной записи которых чётное число единиц.",
        type: "text",
        answer: "8192"
    },
    {
        question: "Операнды арифметического выражения записаны в системах счисления с основаниями 12 и 14:<br>x231y12 + 78x98y14<br>В записи чисел переменными x и y обозначены допустимые в данных системах счисления неизвестные цифры. Определите значения x и y, при которых значение данного арифметического выражения будет наименьшим и кратно 99. Для найденных значений x и y вычислите частное от деления значения арифметического выражения на 99 и укажите его в ответе в десятичной системе счисления. Основание системы счисления в ответе указывать не нужно.",
        type: "text",
        answer: "41428"
    },
    {
        question: "На числовой прямой даны два отрезка: Р = [3, 38] и Q = [21, 57]. Какова наибольшая возможная длина интервала A, что логическое выражение<br>((х ∈ Q) → (х ∈ Р)) → ¬(х ∈ A)<br>тождественно истинно, то есть принимает значение 1 при любом значении переменной х.",
        type: "text",
        answer: "19"
    },
    {
        question: "Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими рекуррентными соотношениями:<br>F(n) = 1 при n = 1;<br>F(n) = F(n − 1) · n при n ≥ 2.<br>Чему равно значение функции F(6)?<br>В ответе запишите только натуральное число.",
        type: "text",
        answer: "720"
    },
    {
        question: "В файле содержится последовательность из 10 000 целых положительных чисел. Каждое число не превышает 10 000. Определите и запишите в ответе сначала количество пар элементов последовательности, у которых сумма элементов кратна 8, затем максимальную из сумм элементов таких пар. В данной задаче под парой подразумевается два различных элемента последовательности. Порядок элементов в паре не важен.",
        type: "textDownloadDoubleInput",
        fileLink: "file17.zip",
        answers: ["6243772", "19992"]
    },
    {
        question: "Квадрат разлинован на N×N клеток (1 < N < 17). Исполнитель Робот может перемещаться по клеткам, выполняя за одно перемещение одну из двух команд: вправо или вверх. По команде вправо Робот перемещается в соседнюю правую клетку, по команде вверх  — в соседнюю верхнюю. При попытке выхода за границу квадрата Робот разрушается. Перед каждым запуском Робота в каждой клетке квадрата лежит монета достоинством от 1 до 100. Посетив клетку, Робот забирает монету с собой; это также относится к начальной и конечной клетке маршрута Робота.<br>Откройте файл. Определите максимальную и минимальную денежную сумму, которую может собрать Робот, пройдя из левой нижней клетки в правую верхнюю. В ответ запишите два числа друг за другом без разделительных знаков  — сначала максимальную сумму, затем минимальную.<br>Исходные данные представляют собой электронную таблицу размером N×N, каждая ячейка которой соответствует клетке квадрата.<br>Пример входных данных:",
        type: "textImageTextDownload",
        images: ["../../../images/ege/29.png"],
        afterImagesText: "Для указанных входных данных ответом должна быть пара чисел 35 и 15.",
        fileLink: "file18.zip",
        answer: "1298584"
    },
    {
        question: "Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в кучу один камень, увеличить количество камней в куче в два раза, если оно нечётное, или в полтора раза, если оно чётное.<br>Например, если в куче 5 камней, то за один ход можно получить 6 или 10 камней, а если в куче 6 камней, то за один ход можно получить 7 или 9 камней.<br>Игра завершается, когда количество камней в куче достигает 108. Победителем считается игрок, сделавший последний ход, то есть первым получивший кучу, в которой будет 108 или больше камней.<br>В начале игры в куче было S камней, 1 ≤ S ≤ 107.<br>Укажите максимальное значение S, при котором Петя не может выиграть первым ходом, но при любом первом ходе Пети Ваня может выиграть своим первым ходом.",
        type: "text",
        answer: "70"
    },
    {
        question: "Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в кучу один камень или увеличить количество камней в куче в три раза. Чтобы делать ходы, у каждого игрока есть неограниченное количество камней.<br>Игра завершается, когда количество камней в куче становится не менее 46. Победителем считается игрок, сделавший последний ход, то есть первым получивший кучу, в которой будет 46 или больше камней.<br>В начальный момент в куче было S камней; 1 ≤ S ≤ 45.<br>Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника. Описать стратегию игрока  — значит, описать, какой ход он должен сделать в любой ситуации, которая ему может встретиться при различной игре противника. В описание выигрышной стратегии не следует включать ходы играющего по этой стратегии игрока, не являющиеся для него безусловно выигрышными, т. е. не являющиеся выигрышными независимо от игры противника.<br>Найдите два таких значения S, при которых у Пети есть выигрышная стратегия, причём Петя не может выиграть первым ходом, но может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.<br>Найденные значения запишите в ответе в порядке возрастания без разделительных знаков.",
        type: "text",
        answer: "514"
    },
    {
        question: "Для игры, описанной в задании 19, найдите максимальное значение S, при котором у Вани есть стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети, но у Вани нет стратегии, которая позволила бы ему гарантированно выиграть первым ходом.",
        type: "text",
        answer: "52"
    },
    {
        question: "В файле содержится информация о совокупности N вычислительных процессов, которые могут выполняться параллельно или последовательно. Будем говорить, что процесс B зависит от процесса A, если для выполнения процесса B необходимы результаты выполнения процесса A. В этом случае процессы могут выполняться только последовательно.<br>Информация о процессах представлена в файле в виде таблицы. В первом столбце таблицы указан идентификатор процесса (ID), во втором столбце таблицы  — время его выполнения в миллисекундах, в третьем столбце перечислены с разделителем «;» ID процессов, от которых зависит данный процесс. Если процесс является независимым, то в таблице указано значение 0.<br>Типовой пример организации данных в файле:",
        type: "textImageTextDownload",
        images: ["../../../images/ege/35.png"],
        afterImagesText: "Определите минимальное время, через которое завершится выполнение всей совокупности процессов, при условии, что все независимые друг от друга процессы могут выполняться параллельно.<br>Типовой пример имеет иллюстративный характер. Для выполнения задания используйте данные из прилагаемого файла.",
        fileLink: "file22.zip",
        answer: "47"
    },
    {
        question: "Исполнитель преобразует число на экране. У исполнителя есть две команды, которым присвоены номера:<br>1. Прибавить 1<br>2.  Умножить на 2<br>Программа для исполнителя  — это последовательность команд.<br>Сколько существует программ, для которых при исходном числе 1 результатом является число 35, при этом траектория вычислений содержит число 10 и не содержит 17?<br>Траектория вычислений программы  — это последовательность результатов выполнения всех команд программы. Например, для программы 121 при исходном числе 7 траектория будет состоять из чисел 8, 16, 17.",
        type: "text",
        answer: "98"
    },
    {
        question: "Текстовый файл содержит только буквы A, C, D, F, O. Определите длину самой длинной цепочки символов, которая начинается и заканчивается буквой F, а между двумя последовательными буквами F содержит не более двух букв A и произвольное количество других букв.",
        type: "textDownload",
        fileLink: "file24.zip",
        answer: "266"
    },
    {
        question: "Маска числа  — это последовательность цифр, в которой могут встречаться специальные символы «?» и «*». Символ «?» означает ровно одну произвольную цифру, символ «*» означает произвольную (в том числе пустую) последовательность цифр.<br>Пример<br>Маске 123*4?5 соответствуют числа 123405 и 12376415.<br>Найдите все натуральные числа, не превышающие 1010, которые соответствуют маске 1?2711*0 и при этом без остатка делятся на 4891.<br>В ответе запишите все найденные числа в порядке возрастания.",
        type: "textMultipleInputPairs",
        pairs: 5,
        answers: Array(5).fill("1027110")
    },
    {
        question: "В отделении банка работают два окна для обслуживания клиентов. Некоторые услуги могут быть оказаны только при обращении в определённое окно, некоторые  — при обращении в любое окно. Клиент входит в отделение и встаёт в очередь к тому окну, которое оказывает необходимую ему услугу. Если услуга может быть оказана в любом окне, клиент выбирает то, в очереди к которому в данный момент меньше людей. Если очереди в оба окна одинаковые, клиент выбирает окно с меньшим номером. При этом если в очереди к выбранному окну уже стоит 14 или более человек (включая человека, которого обслуживают в данный момент), пришедший клиент сразу уходит.<br>Если момент завершения обслуживания одного или нескольких клиентов совпадает с моментом прихода нового клиента, то можно считать, что новый клиент пришёл после того, как обслуживание ранее пришедшего клиента завершилось и очередь сократилась.<br>Входные данные<br>Первая строка входного файла содержит целое число N (N ≤ 1000)  — общее количество клиентов, пришедших в отделение за один рабочий день. Каждая из следующих N строк описывает одного клиента и содержит 3 целых числа: время прихода клиента в отделение (количество минут с начала рабочего дня), время, необходимое для обслуживания данного клиента, и номер окна, в которое ему необходимо обратиться (0 означает, что клиент может обратиться в любое окно). Гарантируется, что никакие два клиента не приходят одновременно.<br>Определите, сколько клиентов будет обслужено в течение дня в окне номер 2 и сколько клиентов покинет отделение из-за слишком больших очередей.<br> В ответе запишите два целых числа: сначала количество клиентов, обслуженных в окне номер 2, затем количество необслуженных клиентов.",
        type: "textDownloadDoubleInput",
        fileLink: "file26.zip",
        answers: ["126", "469"]
    },
    {
        question: "Дана последовательность натуральных чисел. Необходимо определить количество её непрерывных подпоследовательностей, сумма элементов которых кратна 1111.<br>Входные данные.<br>Первая строка входного файла содержит целое число N  — общее количество чисел в наборе. Каждая из следующих N строк содержит одно число. Гарантируется, что общая сумма всех чисел и число в ответе не превышают 2 · 109 по абсолютной величине.<br>Вам даны два входных файла (A и B), каждый из которых имеет описанную выше структуру. В ответе укажите два числа: сначала значение искомой суммы для файла A, затем для файла B.",
        type: "textDoubleDownloadDoubleInput",
        fileLinks: ["file27-1.zip", "file27-2.zip"],
        answers: ["344", "1620157920"]
    }
];

function displayQuestions() {
    const container = document.getElementById('quiz-container');
    questions.forEach((item, index) => {
        const div = document.createElement('div');
        div.className = "question-block";
        let questionContent = `<h3>Задание ${index + 1}</h3><p>${item.question}</p>`;

        switch (item.type) {
            case "textImageText":
                questionContent += `<div class="image-container">${item.images.map(img => `<img src="${img}" alt="Image">`).join('')}</div>`;
                questionContent += `<p>${item.afterImagesText}</p>`;
                questionContent += `<br><input type='text' id='answer${index}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                break;
            case "textImageTextImageText":
                questionContent += `<div class="image-container"><img src="${item.images[0]}" alt="Image"></div>`;
                questionContent += `<p>${item.afterImagesText}</p>`;
                questionContent += `<div class="image-container"><img src="${item.images[1]}" alt="Image"></div>`;
                questionContent += `<br><input type='text' id='answer${index}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                break;
            case "textImageTextDownload":
                questionContent += `<div class="image-container"><img src="${item.images[0]}" alt="Image"></div><p>${item.afterImagesText}</p>`;
                questionContent += `<a href="${item.fileLink}" download>Скачать файл</a>`;
                questionContent += `<br><input type='text' id='answer${index}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                break;
            case "text":
                questionContent += `<br><input type='text' id='answer${index}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                break;
            case "textDownload":
                questionContent += `<a href="${item.fileLink}" download>Скачать файл</a>`;
                questionContent += `<br><input type='text' id='answer${index}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                break;
            case "textMultipleInputPairs":
                for (let i = 0; i < item.pairs; i++) {
                    questionContent += `<br><input type='text' id='answer${index}-${i}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                }
                break;
            case "textDownloadDoubleInput":
                questionContent += `<a href="${item.fileLink}" download>Скачать файл</a>`;
                questionContent += `<div class="input-row">
                                        <input type='text' id='answer${index}-1' placeholder='Ваш ответ 1' autocomplete='off'>
                                        <input type='text' id='answer${index}-2' placeholder='Ваш ответ 2' autocomplete='off'>
                                    </div><br>`;
                break;
            case "textDoubleDownloadDoubleInput":
                item.fileLinks.forEach((link, idx) => {
                    questionContent += `<a href="${link}" download>Скачать файл ${idx + 1}</a><br>`;
                });
                questionContent += `<div class="input-row">
                                        <input type='text' id='answer${index}-1' placeholder='Ваш ответ 1' autocomplete='off'>
                                        <input type='text' id='answer${index}-2' placeholder='Ваш ответ 2' autocomplete='off'>
                                    </div><br>`;
                break;
        }

        div.innerHTML = questionContent;
        container.appendChild(div);
    });
}

function calculateFinalScore() {
    let totalScore = 0;

    questions.forEach((item, index) => {
        if (item.type === "textMultipleInputPairs" || item.type === "textDownloadDoubleInput" || item.type === "textDoubleDownloadDoubleInput") {
            let allCorrect = true;
            for (let i = 0; i < (item.pairs || item.answers.length); i++) {
                const inputElement = document.getElementById(`answer${index}-${i}`);
                if (!inputElement || inputElement.value.trim().toLowerCase() !== item.answers[i].toLowerCase()) {
                    allCorrect = false;
                    break;
                }
            }
            if (allCorrect) {
                if (index >= 25) {
                    totalScore += 2; // Для вопросов 26 и 27
                } else {
                    totalScore++;
                }
            }
        } else {
            const inputElement = document.getElementById(`answer${index}`);
            if (inputElement && inputElement.value.trim().toLowerCase() === item.answer.toLowerCase()) {
                if (index >= 25) {
                    totalScore += 2; // Для вопросов 26 и 27
                } else {
                    totalScore++;
                }
            }
        }
    });

    return totalScore;
}

function calculateGrade(score) {
    if (score >= 22) return '5';
    if (score >= 16) return '4';
    if (score >= 6) return '3';
    return '2';
}

function checkAnswers() {
    const results = [];
    questions.forEach((item, index) => {
        if (item.type === "textMultipleInputPairs") {
            const givenAnswers = [];
            const correctAnswers = [];
            for (let i = 0; i < item.pairs; i++) {
                const inputElement = document.getElementById(`answer${index}-${i}`);
                const userAnswer = inputElement ? inputElement.value.trim() : "";
                givenAnswers.push(userAnswer);
                correctAnswers.push(item.answers[i]);
            }
            results.push({
                question: index + 1,
                givenAnswer: givenAnswers.join(", "),
                correctAnswer: correctAnswers.join(", ")
            });
        } else if (item.type === "textDownloadDoubleInput" || item.type === "textDoubleDownloadDoubleInput") {
            const givenAnswers = [];
            const correctAnswers = [];
            item.answers.forEach((_, i) => {
                const inputElement = document.getElementById(`answer${index}-${i + 1}`);
                const userAnswer = inputElement ? inputElement.value.trim() : "";
                givenAnswers.push(userAnswer);
                correctAnswers.push(item.answers[i]);
            });
            results.push({
                question: index + 1,
                givenAnswer: givenAnswers.join(", "),
                correctAnswer: correctAnswers.join(", ")
            });
        } else {
            const inputElement = document.getElementById(`answer${index}`);
            const userAnswer = inputElement ? inputElement.value.trim() : "";
            results.push({
                question: index + 1,
                givenAnswer: userAnswer,
                correctAnswer: item.answer
            });
        }
    });

    const totalScore = calculateFinalScore();
    const grade = calculateGrade(totalScore);
    displayResults(results, totalScore, grade);
}

function displayResults(results, score, grade) {
    const modal = document.getElementById('resultsModal');
    const resultsDiv = document.getElementById('resultsTable');

    let tableHtml = "<table><tr><th>Номер вопроса</th><th>Данный ответ</th><th>Правильный ответ</th></tr>";
    
    let processedQuestions = new Set();

    results.forEach(result => {
        if (!processedQuestions.has(result.question)) {
            const relatedResults = results.filter(r => r.question === result.question);
            const givenAnswers = relatedResults.map(r => r.givenAnswer).join(", ");
            const correctAnswers = relatedResults.map(r => r.correctAnswer).join(", ");
            const answerClass = givenAnswers.toLowerCase() === correctAnswers.toLowerCase() ? "correct-answer" : "incorrect-answer";
            
            tableHtml += `<tr><td>${result.question}</td><td class="${answerClass}">${givenAnswers}</td><td>${correctAnswers}</td></tr>`;
            processedQuestions.add(result.question);
        }
    });

    tableHtml += "</table>";
    resultsDiv.innerHTML = tableHtml;
    modal.style.display = "block";

    document.querySelector('.modal-content h1').textContent = `Ваша оценка: ${grade}`;
    document.querySelector('.modal-content p').textContent = `Вы ответили правильно на ${score} из ${questions.length} вопросов. Максимальный балл: 29.`;

    document.querySelector('.close-button').onclick = function() {
        modal.style.display = "none";
    };
}

window.onload = displayQuestions;
document.getElementById('checkSelfButton').addEventListener('click', checkAnswers);

document.querySelector('.close-button').onclick = function() {
    document.getElementById('resultsModal').style.display = 'none';
};
