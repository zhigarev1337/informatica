 questions = [
    {
        question: "<br>Так как таблицу и схему рисовали независимо друг от друга, то нумерация населённых пунктов в таблице никак не связана с буквенными обозначениями на графе. Определите номера населённых пунктов Б и В в таблице. В ответе напишите два числа без разделителей: сначала для пункта Б, затем для пункта В.",
        type: "textImageText",
        images: ["../../../images/ege/3.png", "../../../images/ege/4.png"],
        afterImagesText: "<br>",
        answer: "17"
    },
    {
        question: "Логическая функция F задаётся выражением (¬x ∧ ¬y) ∨ (y ≡ z) ∨ ¬w.<br>Дан частично заполненный фрагмент, содержащий неповторяющиеся строки таблицы истинности функции F.<br>Определите, какому столбцу таблицы истинности соответствует каждая из переменных x, y, z, w.",
        type: "textImageTextImageText",
        images: ["../../../images/ege/13.png", "../../../images/ege/14.png"],
        afterImagesText: "В ответе напишите буквы x, y, z, w в том порядке, в котором идут соответствующие им столбцы (сначала  — буква, соответствующая первому столбцу; затем  — буква, соответствующая второму столбцу, и т. д.). Буквы в ответе пишите подряд, никаких разделителей между буквами ставить не нужно.<br>Пример. Пусть задано выражение x → y, зависящее от двух переменных x и y, и фрагмент таблицы истинности:<br>Тогда первому столбцу соответствует переменная y, а второму столбцу соответствует переменная x. В ответе нужно написать: yx.",
        answer: "zyxw"
    },
    {
        question: "В файле приведён фрагмент базы данных «Продукты», содержащей информацию о поставках товаров и их продаже. База данных состоит из трёх таблиц.<br>Таблица «Торговля» содержит записи о поставках и продажах товаров в магазинах города в июне 2021⁠г. Таблица «Товар» содержит данные о товарах. Таблица «Магазин» содержит данные о магазинах.<br>На рисунке приведена схема базы данных, содержащая все поля каждой таблицы и связи между ними.",
        type: "textImageTextDownload",
        images: ["../../../images/ege/21.png"],
        afterImagesText: "Используя информацию из приведённой базы данных, определите магазин, продавший за месяц наибольшее количество лапши гречневой. В ответе запишите ID магазина  — так, как он указан в базе.",
        fileLink: "file3.zip",
        answer: "М35"
    },
    {
        question: "Для кодирования некоторой последовательности, состоящей из букв К, Л, М, Н, П, Р, решили использовать неравномерный двоичный код, удовлетворяющий условию Фано. Для букв К, Л, М, Н использовали соответственно кодовые слова 00, 01, 100, 110. Для двух оставшихся букв  — П и Р  — кодовые слова неизвестны. Укажите кратчайшее возможное кодовое слово для буквы П, при котором код допускает однозначное декодирование. Если таких кодов несколько, укажите код с наименьшим числовым значением. <br><b>Примечание.</b> Условие Фано означает, что никакое кодовое слово не является началом другого кодового слова. Это обеспечивает возможность однозначной расшифровки закодированных сообщений.",
        type: "text",
        answer: "101"
    },
    {
        question: "Автомат получает на вход трёхзначное число. По этому числу строится новое число по следующим правилам.<br>1.  Складываются отдельно первая и вторая цифры, а также вторая и третья цифры.<br>2.  Полученные два числа записываются друг за другом в порядке неубывания без разделителей.<br>Пример. Исходное число: 872. Суммы: 8+7 = 15; 7+2 = 9. Результат: 915.<br>Укажите наименьшее число, при обработке которого автомат выдаёт результат 812.",
        type: "text",
        answer: "175"
    },
    {
        question: "Исполнитель Черепаха действует на плоскости с декартовой системой координат. В начальный момент Черепаха находится в начале координат, её голова направлена вдоль положительного направления оси ординат, хвост опущен. При опущенном хвосте Черепаха оставляет на поле след в виде линии. В каждый конкретный момент известно положение исполнителя и направление его движения. У исполнителя существует две команды: Вперёд r (где r  — положительное число), вызывающая передвижение Черепахи на расстояние, равное r, в том направлении, куда указывает её голова; Направо m (где m  — целое число), вызывающая изменение направления движения на m градусов по часовой стрелке.<br>Запись Повтори k [Команда 1 Команда 2 ... Команда S] означает, что последовательность из S команд повторится k раз.<br>Черепахе был дан для исполнения следующий алгоритм:<br>Направо 90 Повтори 4 [Вперёд  Направо 150 Вперёд  Направо 300]<br>Определите, сколько точек с целочисленными координатами будут находиться внутри области, ограниченной линией, заданной данным алгоритмом. Точки на линии учитывать не следует.",
        type: "text",
        answer: "99"
    },
    {
        question: "Изображение размером 315 × 3072 пикселей сохраняется в памяти компьютера. Для его хранения выделяется не более 735 Кбайт без учёта заголовка файла. Все пиксели кодируются одинаковым количеством бит и записываются в файл один за другим. Какое максимальное количество цветов можно использовать в изображении? В ответе запишите только число.",
        type: "text",
        answer: "64"
    },
    {
        question: "Вася составляет 4-буквенные слова, в которых могут быть только буквы Ж, И, Р, А, Ф, причём буква Р используется в каждом слове ровно 1 раз. Каждая из других допустимых букв может встречаться в слове любое количество раз или не встречаться совсем. Словом считается любая допустимая последовательность букв, не обязательно осмысленная. Сколько существует таких слов, которые может написать Вася?",
        type: "text",
        answer: "256"
    },
    {
        question: "Откройте файл электронной таблицы, содержащей в каждой строке четыре натуральных числа.<br>Определите количество строк таблицы, содержащих числа, для которых выполнено хотя бы одно из условий:<br>—  квадрат наибольшего из четырёх чисел больше произведения трёх других;<br>—  будучи упорядоченными, четыре числа образуют арифметическую прогрессию.<br>В ответе запишите только число.",
        type: "textDownload",
        fileLink: "file9.zip",
        answer: "61"
    },
    {
        question: "Определите, сколько раз в тексте произведения А. С. Пушкина «Дубровский» встречается существительное «борода» в любом числе и падеже.",
        type: "textDownload",
        fileLink: "file10.zip",
        answer: "2"
    },
    {
        question: "При регистрации в компьютерной системе каждому пользователю выдаётся пароль, состоящий из 16 символов и содержащий только заглавные символы среднего ряда латинской раскладки клавиатуры: A, S, D, F, G, H, J, K, L. Каждый такой пароль в компьютерной программе записывается минимально возможным и одинаковым целым количеством байт (при этом используют посимвольное кодирование и все символы кодируются одинаковым и минимально возможным количеством бит).<br>Определите объём памяти, отводимый этой программой для записи 25 паролей. (Ответ дайте в байтах.)",
        type: "text",
        answer: "200"
    },
    {
        question: "Исполнитель Редактор получает на вход строку цифр и преобразовывает её. Редактор может выполнять две команды, в обеих командах v и w обозначают цепочки цифр.<br>А)  заменить (v, w).<br>Эта команда заменяет в строке первое слева вхождение цепочки v на цепочку w. Например, выполнение команды<br>заменить (111, 27)<br>преобразует строку 05111150 в строку 0527150.<br>Если в строке нет вхождений цепочки v, то выполнение команды заменить (v, w) не меняет эту строку.<br>Б)  нашлось (v).<br>Эта команда проверяет, встречается ли цепочка v в строке исполнителя Редактор. Если она встречается, то команда возвращает логическое значение «истина», в противном случае возвращает значение «ложь». Строка<br>исполнителя при этом не изменяется.<br>Цикл<br>    ПОКА условие<br>        последовательность команд<br>    КОНЕЦ ПОКА<br>выполняется, пока условие истинно.<br>В конструкции<br>    ЕСЛИ условие<br>        ТО команда1<br>    КОНЕЦ ЕСЛИ<br>выполняется команда1 (если условие истинно).<br>В конструкции<br>    ЕСЛИ условие<br>        ТО команда1<br>        ИНАЧЕ команда2<br>    КОНЕЦ ЕСЛИ<br>выполняется команда1 (если условие истинно) или команда2 (если условие ложно).<br>На вход приведённой ниже программе поступает строка, начинающаяся с символа «>», а затем содержащая 11 цифр 1, 12 цифр 2 и 30 цифр 3, расположенных в произвольном порядке.<br>Определите сумму числовых значений цифр строки, получившейся в результате выполнения программы.<br>Так, например, если результат работы программы представлял бы собой строку, состоящую из 50 цифр 4, то верным ответом было бы число 200.<br>НАЧАЛО<br>ПОКА нашлось (>1) ИЛИ нашлось (>2) ИЛИ нашлось (>3)<br>    ЕСЛИ нашлось (>1)<br>        ТО заменить (>1, 22>)<br>    КОНЕЦ ЕСЛИ    ЕСЛИ нашлось (>2)<br>        ТО заменить (>2, 2>)<br>    КОНЕЦ ЕСЛИ<br>    ЕСЛИ нашлось (>3)<br>        ТО заменить (>3, 1>)<br>    КОНЕЦ ЕСЛИ<br>КОНЕЦ ПОКА<br>КОНЕЦ",
        type: "text",
        answer: "98"
    },
    {
        question: "Маской подсети называется 32-разрядное двоичное число, которое определяет, какая часть IP-адреса компьютера относится к адресу сети, а какая часть IP-адреса определяет адрес компьютера в подсети. В маске подсети старшие биты, отведенные в IP-адресе компьютера для адреса сети, имеют значение 1; младшие биты, отведенные в IP-адресе компьютера для адреса компьютера в подсети, имеют значение 0.<br>Если маска подсети 255.255.248.0 и IP-адрес компьютера в сети 112.154.133.208, то номер компьютера в сети равен_____",
        type: "text",
        answer: "1488"
    },
    {
        question: "Операнды арифметического выражения записаны в системе счисления с основанием 15:<br>123x515 + 1x23315<br>В записи чисел переменной x обозначена неизвестная цифра из алфавита 15-ричной системы счисления. Определите наименьшее значение x, при котором значение данного арифметического выражения кратно 14. Для найденного значения x вычислите частное от деления значения арифметического выражения на 14 и укажите его в ответе в десятичной системе счисления. Основание системы счисления в ответе указывать не нужно.",
        type: "text",
        answer: "8767"
    },
    {
        question: "Для какого наименьшего целого неотрицательного числа А выражение<br>(x + 2y < A) ∨ (y > x) ∨ (x > 30)<br>тождественно истинно, т. е. принимает значение 1 при любых целых неотрицательных x и y?",
        type: "text",
        answer: "91"
    },
    {
        question: "Алгоритм вычисления значения функции F(n), где n – натуральное число, задан следующими соотношениями:<br>F(1) = 1<br>F(n) = F(n–1) * n, при n >1<br>Чему равно значение функции F(5)? В ответе запишите только натуральное число.",
        type: "text",
        answer: "120"
    },
    {
        question: "Файл содержит последовательность целых чисел, по модулю не превышающих 10 000. Назовём парой два идущих подряд элемента последовательности.<br>Определите количество пар, для которых выполняются следующие условия:<br>— запись элементов пары заканчивается одной и той же цифрой;<br>— ровно один элемент из пары делится без остатка на 3;<br>— сумма квадратов элементов пары не превышает квадрат наименьшего из элементов последовательности, запись которых заканчивается цифрой 3.<br>В ответе запишите два числа: сначала количество найденных пар, затем максимальную величину суммы квадратов элементов этих пар.",
        type: "textDownloadDoubleInput",
        fileLink: "file17.zip",
        answers: ["172", "99446482"]
    },
    {
        question: "Квадрат разлинован на N×N клеток (1 < N < 17). Исполнитель Робот может перемещаться по клеткам, выполняя за одно перемещение одну из двух команд: вправо или вверх. По команде вправо Робот перемещается в соседнюю правую клетку, по команде вверх  — в соседнюю верхнюю. При попытке выхода за границу квадрата Робот разрушается. Перед каждым запуском Робота в каждой клетке квадрата лежит монета достоинством от 1 до 100. Посетив клетку, Робот забирает монету с собой; это также относится к начальной и конечной клетке маршрута Робота.<br>Откройте файл. Определите максимальную и минимальную денежную сумму, которую может собрать Робот, пройдя из левой нижней клетки в правую верхнюю. В ответ запишите два числа друг за другом без разделительных знаков  — сначала максимальную сумму, затем минимальную.<br>Исходные данные представляют собой электронную таблицу размером N×N, каждая ячейка которой соответствует клетке квадрата.<br>Пример входных данных:",
        type: "textImageTextDownload",
        images: ["../../../images/ege/25.png"],
        afterImagesText: "Для указанных входных данных ответом должна быть пара чисел 35 и 15.",
        fileLink: "file18.zip",
        answer: "1271558"
    },
    {
        question: "Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в кучу один или три камня или увеличить количество камней в куче в два раза. Например, имея кучу из 15 камней, за один ход можно получить кучу из 16, 18 или 30 камней. Для того чтобы делать ходы, у каждого игрока есть неограниченное количество камней.<br>Игра завершается в тот момент, когда количество камней в куче становится не менее 48. Победителем считается игрок, сделавший последний ход, то есть первым получивший кучу, в которой будет 48 или больше камней. В начальный момент в куче было S камней, 1 ≤ S ≤ 47.<br>Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника. Описать стратегию игрока  — значит, описать, какой ход он должен сделать в любой ситуации, которая ему может встретиться при различной игре противника.<br>Известно, что Ваня выиграл своим первым ходом после неудачного первого хода Пети. Укажите минимальное значение S, когда такая ситуация возможна.",
        type: "text",
        answer: "12"
    },
    {
        question: "Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежат две кучи камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в одну из куч (по своему выбору) один камень или увеличить количество камней в куче в два раза. Например, пусть в одной куче 5 камней, а в другой 9 камней; такую позицию мы будем обозначать (5, 9). За один ход из позиции (5, 9) можно получить любую из четырёх позиций: (6, 9), (10, 9), (5, 10), (5, 18).<br>Игра завершается в тот момент, когда суммарное количество камней в кучах становится не менее 77. Победителем считается игрок, сделавший последний ход, т. е. первым получивший позицию, в которой в кучах будет 77 или больше камней.<br>В начальный момент в первой куче было 8 камней, во второй куче  — S камней; 1 ≤ S ≤ 68.<br>Будем говорить, что игрок имеет выигрышную стратегию, если он может выиграть при любых ходах противника. Описать стратегию игрока  — значит, описать, какой ход он должен сделать в любой ситуации, которая ему может встретиться при различной игре противника. В описание выигрышной стратегии не следует включать ходы играющего по этой стратегии игрока, не являющиеся для него безусловно выигрышными, т. е. не являющиеся выигрышными независимо от игры противника.<br>Найдите все значения S, при которых у Пети есть выигрышная стратегия, причём одновременно выполняются два условия:<br>— Петя не может выиграть за один ход;<br>— Петя может выиграть своим вторым ходом независимо от того, как будет ходить Ваня.<br>Найденные значения запишите в ответе в порядке возрастания без разделительных знаков.",
        type: "text",
        answer: "173033"
    },
    {
        question: "Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки ходят по очереди, первый ход делает Петя. За один ход игрок может добавить в кучу один камень, увеличить количество камней в куче в два раза, если оно нечётное, или в полтора раза, если оно чётное.<br>Например, если в куче 5 камней, то за один ход можно получить 6 или 10 камней, а если в куче 6 камней, то за один ход можно получить 7 или 9 камней. Игра завершается, когда количество камней в куче достигает 84.<br>Победителем считается игрок, сделавший последний ход, то есть первым получивший кучу, в которой будет 84 или больше камней.<br>В начале игры в куче было S камней, 1 ≤ S ≤ 83.<br>Найдите максимальное значение S, при котором у Вани есть стратегия, позволяющая ему выиграть первым или вторым ходом при любой игре Пети, но у Вани нет стратегии, которая позволила бы ему гарантированно выиграть первым ходом.",
        type: "text",
        answer: "40"
    },
    {
        question: "В файле 22_8.xlsx содержится информация о совокупности N вычислительных процессов, которые могут выполняться параллельно или последовательно. Будем говорить, что процесс B зависит от процесса A, если для выполнения процесса B необходимы результаты выполнения процесса A. В этом случае процессы могут выполняться только последовательно.<br>Информация о процессах представлена в файле в виде таблицы. В первой строке таблицы указан идентификатор процесса (ID), во второй строке таблицы  — время его выполнения в миллисекундах, в третьей строке перечислены с разделителем «;» ID процессов, от которых зависит данный процесс. Если процесс является независимым, то в таблице указано значение 0.<br>Определите минимальное время, через которое завершится выполнение всей совокупности процессов, при условии, что все независимые друг от друга процессы могут выполняться параллельно.<br>Типовой пример организации данных в файле:",
        type: "textImageTextDownload",
        images: ["../../../images/ege/31.png"],
        afterImagesText: "В данном случае независимые процессы 1 и 2 могут выполняться параллельно, при этом процесс 1 завершится через 4 мс, а процесс 2  — через 3 мс с момента старта. Процесс 3 может начаться только после завершения обоих процессов 1 и 2, то есть, через 4 мс после старта. Он длится 1 мс и закончится через 4 + 1 = 5 мс после старта. Выполнение процесса 4 может начаться только после завершения процесса 3, то есть, через 5 мс. Он длится 7 мс, так что минимальное время завершения всех процессов равно 5 + 7 = 12 мс.",
        fileLink: "file22.zip",
        answer: "21"
    },
    {
        question: "Исполнитель НечетМ преобразует число на экране. У исполнителя НечетМ две команды, которым присвоены номера:<br>1.  прибавь 1<br>2.  сделай нечётное<br>Первая из этих команд увеличивает число x на экране на 1, вторая переводит число x в число 2x+1. Например, вторая команда переводит число 10 в число 21. Программа для исполнителя НечетМ  — это последовательность команд. Сколько существует таких программ, которые число 1 преобразуют в число 25, причём траектория вычислений не содержит число 24? Траектория вычислений программы  — это последовательность результатов выполнения всех команд программы. Например, для программы 121 при исходном числе 7 траектория будет состоять из чисел 8, 17, 18.",
        type: "text",
        answer: "10"
    },
    {
        question: "Текстовый файл состоит не более чем из 106 символов X, Y и Z. Определите максимальную длину цепочки вида XYZXYZXYZ... (составленной из фрагментов XYZ, последний фрагмент может быть неполным).<br>Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.",
        type: "textDownload",
        fileLink: "file24.zip",
        answer: "13"
    },
    {
        question: "Маска числа  — это последовательность цифр, в которой могут встречаться специальные символы «?» и «*». Символ «?» означает ровно одну произвольную цифру, символ «*» означает произвольную (в том числе пустую) последовательность цифр.<br>Пример<br>Маске 123*4?5 соответствуют числа 123405 и 12376415.<br>Найдите все натуральные числа, не превышающие 1010, которые соответствуют маске 1?2711*0 и при этом без остатка делятся на 4891.<br>В ответе запишите все найденные числа в порядке возрастания.",
        type: "textMultipleInputPairs",
        pairs: 5,
        answers: Array(5).fill("1027110")
    },
    {
        question: "В отделении банка работают два окна для обслуживания клиентов. Некоторые услуги могут быть оказаны только при обращении в определённое окно, некоторые  — при обращении в любое окно. Клиент входит в отделение и встаёт в очередь к тому окну, которое оказывает необходимую ему услугу. Если услуга может быть оказана в любом окне, клиент выбирает то, в очереди к которому в данный момент меньше людей. Если очереди в оба окна одинаковые, клиент выбирает окно с меньшим номером. При этом если в очереди к выбранному окну уже стоит 14 или более человек (включая человека, которого обслуживают в данный момент), пришедший клиент сразу уходит.<br>Если момент завершения обслуживания одного или нескольких клиентов совпадает с моментом прихода нового клиента, то можно считать, что новый клиент пришёл после того, как обслуживание ранее пришедшего клиента завершилось и очередь сократилась.<br>Входные данные<br>Первая строка входного файла содержит целое число N (N ≤ 1000)  — общее количество клиентов, пришедших в отделение за один рабочий день. Каждая из следующих N строк описывает одного клиента и содержит 3 целых числа: время прихода клиента в отделение (количество минут с начала рабочего дня), время, необходимое для обслуживания данного клиента, и номер окна, в которое ему необходимо обратиться (0 означает, что клиент может обратиться в любое окно). Гарантируется, что никакие два клиента не приходят одновременно.<br>Определите, сколько клиентов будет обслужено в течение дня в окне номер 2 и сколько клиентов покинет отделение из-за слишком больших очередей.<br> В ответе запишите два целых числа: сначала количество клиентов, обслуженных в окне номер 2, затем количество необслуженных клиентов.",
        type: "textDownloadDoubleInput",
        fileLink: "file26.zip",
        answers: ["126", "469"]
    },
    {
        question: "Дана последовательность натуральных чисел. Необходимо определить количество её непрерывных подпоследовательностей, сумма элементов которых кратна 1111.<br>Входные данные.<br>Первая строка входного файла содержит целое число N  — общее количество чисел в наборе. Каждая из следующих N строк содержит одно число. Гарантируется, что общая сумма всех чисел и число в ответе не превышают 2 · 109 по абсолютной величине.<br>Вам даны два входных файла (A и B), каждый из которых имеет описанную выше структуру. В ответе укажите два числа: сначала значение искомой суммы для файла A, затем для файла B.",
        type: "textDoubleDownloadDoubleInput",
        fileLinks: ["file27-1.zip", "file27-2.zip"],
        answers: ["344", "1620157920"]
    }
];

function displayQuestions() {
    const container = document.getElementById('quiz-container');
    questions.forEach((item, index) => {
        const div = document.createElement('div');
        div.className = "question-block";
        let questionContent = `<h3>Задание ${index + 1}</h3><p>${item.question}</p>`;

        switch (item.type) {
            case "textImageText":
                questionContent += `<div class="image-container">${item.images.map(img => `<img src="${img}" alt="Image">`).join('')}</div>`;
                questionContent += `<p>${item.afterImagesText}</p>`;
                questionContent += `<br><input type='text' id='answer${index}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                break;
            case "textImageTextImageText":
                questionContent += `<div class="image-container"><img src="${item.images[0]}" alt="Image"></div>`;
                questionContent += `<p>${item.afterImagesText}</p>`;
                questionContent += `<div class="image-container"><img src="${item.images[1]}" alt="Image"></div>`;
                questionContent += `<br><input type='text' id='answer${index}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                break;
            case "textImageTextDownload":
                questionContent += `<div class="image-container"><img src="${item.images[0]}" alt="Image"></div><p>${item.afterImagesText}</p>`;
                questionContent += `<a href="${item.fileLink}" download>Скачать файл</a>`;
                questionContent += `<br><input type='text' id='answer${index}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                break;
            case "text":
                questionContent += `<br><input type='text' id='answer${index}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                break;
            case "textDownload":
                questionContent += `<a href="${item.fileLink}" download>Скачать файл</a>`;
                questionContent += `<br><input type='text' id='answer${index}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                break;
            case "textMultipleInputPairs":
                for (let i = 0; i < item.pairs; i++) {
                    questionContent += `<br><input type='text' id='answer${index}-${i}' placeholder='Ваш ответ' autocomplete='off'><br>`;
                }
                break;
            case "textDownloadDoubleInput":
                questionContent += `<a href="${item.fileLink}" download>Скачать файл</a>`;
                questionContent += `<div class="input-row">
                                        <input type='text' id='answer${index}-1' placeholder='Ваш ответ 1' autocomplete='off'>
                                        <input type='text' id='answer${index}-2' placeholder='Ваш ответ 2' autocomplete='off'>
                                    </div><br>`;
                break;
            case "textDoubleDownloadDoubleInput":
                item.fileLinks.forEach((link, idx) => {
                    questionContent += `<a href="${link}" download>Скачать файл ${idx + 1}</a><br>`;
                });
                questionContent += `<div class="input-row">
                                        <input type='text' id='answer${index}-1' placeholder='Ваш ответ 1' autocomplete='off'>
                                        <input type='text' id='answer${index}-2' placeholder='Ваш ответ 2' autocomplete='off'>
                                    </div><br>`;
                break;
        }

        div.innerHTML = questionContent;
        container.appendChild(div);
    });
}

function calculateFinalScore() {
    let totalScore = 0;

    questions.forEach((item, index) => {
        if (item.type === "textMultipleInputPairs" || item.type === "textDownloadDoubleInput" || item.type === "textDoubleDownloadDoubleInput") {
            let allCorrect = true;
            for (let i = 0; i < (item.pairs || item.answers.length); i++) {
                const inputElement = document.getElementById(`answer${index}-${i}`);
                if (!inputElement || inputElement.value.trim().toLowerCase() !== item.answers[i].toLowerCase()) {
                    allCorrect = false;
                    break;
                }
            }
            if (allCorrect) {
                if (index >= 25) {
                    totalScore += 2; // Для вопросов 26 и 27
                } else {
                    totalScore++;
                }
            }
        } else {
            const inputElement = document.getElementById(`answer${index}`);
            if (inputElement && inputElement.value.trim().toLowerCase() === item.answer.toLowerCase()) {
                if (index >= 25) {
                    totalScore += 2; // Для вопросов 26 и 27
                } else {
                    totalScore++;
                }
            }
        }
    });

    return totalScore;
}

function calculateGrade(score) {
    if (score >= 22) return '5';
    if (score >= 16) return '4';
    if (score >= 6) return '3';
    return '2';
}

function checkAnswers() {
    const results = [];
    questions.forEach((item, index) => {
        if (item.type === "textMultipleInputPairs") {
            const givenAnswers = [];
            const correctAnswers = [];
            for (let i = 0; i < item.pairs; i++) {
                const inputElement = document.getElementById(`answer${index}-${i}`);
                const userAnswer = inputElement ? inputElement.value.trim() : "";
                givenAnswers.push(userAnswer);
                correctAnswers.push(item.answers[i]);
            }
            results.push({
                question: index + 1,
                givenAnswer: givenAnswers.join(", "),
                correctAnswer: correctAnswers.join(", ")
            });
        } else if (item.type === "textDownloadDoubleInput" || item.type === "textDoubleDownloadDoubleInput") {
            const givenAnswers = [];
            const correctAnswers = [];
            item.answers.forEach((_, i) => {
                const inputElement = document.getElementById(`answer${index}-${i + 1}`);
                const userAnswer = inputElement ? inputElement.value.trim() : "";
                givenAnswers.push(userAnswer);
                correctAnswers.push(item.answers[i]);
            });
            results.push({
                question: index + 1,
                givenAnswer: givenAnswers.join(", "),
                correctAnswer: correctAnswers.join(", ")
            });
        } else {
            const inputElement = document.getElementById(`answer${index}`);
            const userAnswer = inputElement ? inputElement.value.trim() : "";
            results.push({
                question: index + 1,
                givenAnswer: userAnswer,
                correctAnswer: item.answer
            });
        }
    });

    const totalScore = calculateFinalScore();
    const grade = calculateGrade(totalScore);
    displayResults(results, totalScore, grade);
}

function displayResults(results, score, grade) {
    const modal = document.getElementById('resultsModal');
    const resultsDiv = document.getElementById('resultsTable');

    let tableHtml = "<table><tr><th>Номер вопроса</th><th>Данный ответ</th><th>Правильный ответ</th></tr>";
    
    let processedQuestions = new Set();

    results.forEach(result => {
        if (!processedQuestions.has(result.question)) {
            const relatedResults = results.filter(r => r.question === result.question);
            const givenAnswers = relatedResults.map(r => r.givenAnswer).join(", ");
            const correctAnswers = relatedResults.map(r => r.correctAnswer).join(", ");
            const answerClass = givenAnswers.toLowerCase() === correctAnswers.toLowerCase() ? "correct-answer" : "incorrect-answer";
            
            tableHtml += `<tr><td>${result.question}</td><td class="${answerClass}">${givenAnswers}</td><td>${correctAnswers}</td></tr>`;
            processedQuestions.add(result.question);
        }
    });

    tableHtml += "</table>";
    resultsDiv.innerHTML = tableHtml;
    modal.style.display = "block";

    document.querySelector('.modal-content h1').textContent = `Ваша оценка: ${grade}`;
    document.querySelector('.modal-content p').textContent = `Вы ответили правильно на ${score} из ${questions.length} вопросов. Максимальный балл: 29.`;

    document.querySelector('.close-button').onclick = function() {
        modal.style.display = "none";
    };
}

window.onload = displayQuestions;
document.getElementById('checkSelfButton').addEventListener('click', checkAnswers);

document.querySelector('.close-button').onclick = function() {
    document.getElementById('resultsModal').style.display = 'none';
};
